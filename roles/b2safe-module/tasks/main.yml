---
  - name: Create directory for b2safe
    file: path={{ b2safe_root }} state=directory
  - name: Check out B2SAFE from github
    git: 
        repo={{ b2safe_git_url }}
        dest={{ b2safe_root }}
        version={{ b2safe_git_version }}
  - name: Symlink all the rule files to iRODS reConfigs folder
    file:
        src={{ b2safe_root }}/rulebase/{{ item.src }}.re
        dest={{ irods_root }}/server/config/reConfigs/{{ item.dest }}.re
        state=link
    with_items:
        - { src: 'catchError', dest: 'eucerr' }
        - { src: 'eudat', dest: 'eudat' }
        - { src: 'local', dest: 'euloc' }
        - { src: 'pid-service', dest: 'eupids' }
        - { src: 'replication', dest: 'eurepl' }
  - name: Create rule file with hook implementations
    copy:
        src=euhooks.re
        dest={{ irods_root }}/server/config/reConfigs/euhooks.re
  - name: Add name of reConfigs symlinks to server.config
    lineinfile:
        dest={{ irods_etc }}/server.config
        regexp='^(reRuleSet.*core).*$'
        line='\1,euhooks,eudat,eurepl,eupids,eucerr,euloc'
        state=present
        backrefs=yes
  - name: Configure default resource for creating files
    lineinfile:
        dest={{ irods_etc }}/core.re
        regexp='^acSetRescSchemeForCreate.*$'
        line='acSetRescSchemeForCreate {msiSetDefaultResc("demoResc","preferred"); }'
        state=present
        backup=yes
  - name: Configure default resource for replication
    lineinfile:
        dest={{ irods_etc }}/core.re
        regexp='^acSetRescSchemeForRepl.*$'
        line='acSetRescSchemeForRepl {msiSetDefaultResc("demoResc","preferred"); }'
        state=present
        backup=yes
  - name: Symlink python command files
    file:
        src={{ b2safe_root }}/cmd/{{ item }}
        dest={{ irods_root }}/server/bin/cmd/{{ item }}
        state=link
    with_items:
        - logmanager.py
        - epicclient.py
        - authZmanager.py
  - name: Set execution permissions for the irods user on the python files
    file:
        path={{ b2safe_root }}/cmd/{{ item }}
        owner=irods
        group=irods
        mode=644
    with_items:
        - logmanager.py
        - epicclient.py
        - authZmanager.py
  - name: Install some required python packages
    yum:
        name={{ item }}
        state=present
    with_items:
        - python-httplib2
        - python-simplejson
        - python-defusedxml
        - python-lxml
        - python-argparse
  - name: Set EPIC API parameters (credStorePath)
    lineinfile:
        dest={{ b2safe_root }}/rulebase/local.re
        backrefs=yes
        regexp='^(.*)credStorePath\=.*$'
        line='\1credStorePath="{{ b2safe_root }}/credentials";'
        state=present
        backup=yes
  - name: Set EPIC API parameters (serverID)
    lineinfile:
        dest={{ b2safe_root }}/rulebase/local.re
        backrefs=yes
        regexp='^(.*)serverID\=.*$'
        line='\1serverID="irods://{{ irods_host }}:{{ irods_port}}";'
        state=present
        backup=yes
  - name: Set EPIC API parameters (credStorePath)
    lineinfile:
        dest={{ b2safe_root }}/rulebase/local.re
        backrefs=yes
        regexp='^(.*)credStorePath\=.*$'
        line='\1credStorePath="{{ b2safe_root }}/conf/credentials";'
        state=present
        backup=yes
  - include_vars: private-vars.yml
  - name: Create credentials file
    template:
        src=credentials.j2
        dest={{ b2safe_root }}/conf/credentials
        owner=irods
        group=irods
        mode=600
  - name: Update getAuthZParameters in local.re (authZMapPath)
    lineinfile:
        dest={{ b2safe_root }}/rulebase/local.re
        backrefs=yes
        regexp='^(.*)authZMapPath\=.*$'
        line='\1authZMapPath="{{ b2safe_root }}/conf/authz.map.json";'
        state=present
        backup=yes
  - name: Update getAuthZParameters in local.re (logConfPath)
    lineinfile:
        dest={{ b2safe_root }}/rulebase/local.re
        backrefs=yes
        regexp='^(.*)logConfPath\=.*$'
        line='\1logConfPath="{{ b2safe_root }}/conf/log.manager.conf";'
        state=present
        backup=yes
  - name: Set proper values in authz.map.json in B2SAFE conf
    template:
        src=authz.map.json.j2
        dest={{ b2safe_root }}/conf/authz.map.json
        backup=yes
# --------------------------------------------------------------------------------
# The following rule not needed at the moment. Seemingly correct values already.
# --------------------------------------------------------------------------------
#  - name: Set proper values in getLogParameters rule in euloc.re
#    lineinfile:
#        dest={{ irods_root }}/server/config/reConfigs/euloc.re
  - name: Create B2SAFE log dir
    file:
        dest={{ b2safe_logdir }}
        state=directory
    sudo: true
  - name: Set proper values in B2SAFE log.manager.conf file
    template:
        src=log.manager.conf.j2
        dest={{ b2safe_root }}/conf/log.manager.conf
        backup=yes
  - name: Create shared space in all zones # as configured in eudat.re in the getSharedCollection function
    sudo: false
    command:
        /vagrant/scripts/create_sharedspace.sh
        creates=/tmp/sharedspace_created
# --------------------------------------------------------------------------------
# The following "task" does not seem to be required at the moment.
# --------------------------------------------------------------------------------
# - Make sure all users involved in the replication can write in the shared collection.
# --------------------------------------------------------------------------------
  - name: Change shebang in modules/B2SAFE/cmd/*.py to proper python path
    lineinfile:
        dest={{ b2safe_root }}/cmd/{{ item }}
        line=#!{{ python_bin }}
        regexp="#\!/usr/bin/env\ python"
        state=present
    with_items:
        - authZmanager.py
        - epicclient.py
        - logmanager.py
